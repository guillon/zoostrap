{
  "name": "Zoostrap",
  "tagline": "Simple distro container bootstrap tool",
  "body": "\r\n[![Build Status](https://api.travis-ci.org/guillon/zoostrap.png?branch=master)](https://travis-ci.org/guillon/zoostrap/branches)\r\n\r\n# Synopsis\r\n\r\nThe zoostrap utility is a simple tool for bootstrapping a Linux host\r\ndistribution and running command in an unprivileged container.\r\n\r\nActually this tool proceeds in three steps:\r\n- download a reference distribution archive an extract into the specified\r\nrootfs directory\r\n- execute installation of additional packages into this rootfs with `PRoot`\r\n- execute actual commands into this rootfs with `ckains`\r\n\r\nThe list of available x86_64 distributions is currently:\r\n- Ubuntu 12.04 (`ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=12.04`)\r\n- Ubuntu 14.04 (`ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=14.04`)\r\n- Ubuntu 16.04 (`ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=16.04`)\r\n- CentOS 5 (`ZS_DISTRIB_ID=centos ZS_DISTRIB_RELEASE=5`)\r\n- CentOS 6 (`ZS_DISTRIB_ID=centos ZS_DISTRIB_RELEASE=6`)\r\n- CentOS 7 (`ZS_DISTRIB_ID=centos ZS_DISTRIB_RELEASE=7`)\r\n- Fedora 20/21/22/23 (`ZS_DISTRIB_ID=fedora ZS_DISTRIB_RELEASE=20/21/22/23`)\r\n\r\nSome x86 distributions are also available with the `ZS_DISTRIB_ARCH=i686`\r\nparameter:\r\n- Ubuntu 12.04 (`ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=12.04 ZS_DISTRIB_ARCH=i686`)\r\n- Ubuntu 14.04 (`ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=14.04 ZS_DISTRIB_ARCH=i686`)\r\n- CentOS 5 (`ZS_DISTRIB_ID=centos ZS_DISTRIB_RELEASE=5 ZS_DISTRIB_ARCH=i686`)\r\n- CentOS 6 (`ZS_DISTRIB_ID=centos ZS_DISTRIB_RELEASE=6 ZS_DISTRIB_ARCH=i686`)\r\n- Fedora 20 (`ZS_DISTRIB_ID=centos ZS_DISTRIB_RELEASE=20 ZS_DISTRIB_ARCH=i686`)\r\n\r\nThis tool is still a prototype and as of now configuration is passed through\r\nthe environment, refer to the TODO file for next steps.\r\n\r\nNote that this tool requires a kernel >= 3.11.x in order to execute\r\nunprivileged containers.\r\nIn particular if you have this kind of error:\r\n`ERROR: unshare failed with error Invalid argument`. The host distribution\r\nkernel is probably too old.\r\n\r\nThe tool uses 3 companions tools as backend:\r\n- PRoot for installation of packages,\r\n- ckains for execution of the container,\r\n- bcache for cacheing of images.\r\n\r\nSee references section.\r\n\r\n\r\n# Download\r\n\r\nDownload a specific release from the release page:\r\nhttps://github.com/guillon/zoostrap/releases\r\n\r\nOr download the last stable version from there:\r\nhttps://raw.githubusercontent.com/guillon/zoostrap/master/zoostrap\r\n\r\nFor instance:\r\n\r\n    $ wget -O ~/bin/zoostrap https://raw.githubusercontent.com/guillon/zoostrap/master/zoostrap\r\n    $ chmod +x ~/bin/zoostrap\r\n\r\nThe first command gets the zoostrap tool and the second command sets execution bit.\r\n\r\n# Examples\r\n\r\nA typical usage is to bootstrap for instance a CentOS or Ubuntu distribution and then\r\nexecute a build command into the installed distribution root tree.\r\n\r\nFor instance, assuming  zoostrap is available in the path:\r\n\r\n    $ env ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=12.04 \\\r\n      ZS_DISTRIB_PACKAGES=\"wget\" \\\r\n      zoostrap rootfs\r\n    $ rootfs/.zoostrap/run wget https://raw.githubusercontent.com/guillon/zoostrap/master/zoostrap\r\n    ...\r\n\r\nThe first command installs a Ubuntu 12.04 core root tree in the rootfs/\r\ndirectory and install the wget package.\r\n\r\nThe second command executes a wget command in the just installed distro.\r\n\r\nOne can also do this with a single command, passing the command to execute as parameter:\r\n\r\n    $ env ZS_DISTRIB_ID=ubuntu ZS_DISTRIB_RELEASE=12.04 \\\r\n      ZS_DISTRIB_PACKAGES=\"wget\" \\\r\n      zoostrap rootfs wget https://raw.githubusercontent.com/guillon/zoostrap/master/zoostrap\r\n    ...\r\n# Parameters\r\n\r\nzoostrap gets parameters from the environment except for the rootfs directory\r\nto create which is passed as argument.\r\n\r\nThe available parameters are:\r\n\r\n* `ZS_DISTRIB_ID=\"<distro>\"`: one of the known distribution listed above.\r\n* `ZS_DISTRIB_RELEASE=\"<release>\"`: one of the known distro release listed above.\r\n* `ZS_DISTRIB_ARCH=\"<uname-m>\"`: the requested architecture for the\r\n  guest as may be provided by `uname -m` for instance. The default is the same\r\n  as the host architecture. It may be x86_64, amd64 (64 bits) or x86,\r\n  i[3456]86 (32 bits).\r\n* `ZS_DISTRIB_PACKAGES=\"<packages list>\"`: space separated list of packages to\r\n  install, note that package names are specific to distributions. It is up to\r\n  the user to give actual packages names as expected by the requested\r\n  distribution.\r\n* `ZS_WGET=\"<wget command>\"`: override default wget command and options.\r\n  The default wget command is: `wget --no-check-certificate --tries 3`.\r\n  Note that you may use `--no-check-certificate` without compromising\r\n  security as all downloaded files are checked against there known\r\n  content hash (a sha1sum).\r\n* `ZS_BCACHE=false|true`: activates caching of installed images, defaults to\r\n  `false`. If `true` Images are cached after after  download and packages\r\n  installation. The cached installed images are\r\n  used on further zoostrap installations if the image identifiers and installed\r\n  packages are the same. Cached images are stored into a local `ZS_BCACHE_DIR`.\r\n  The `ZS_BCACHE_ID` variable can be used to discriminate images optionally,\r\n  and have a guarantee that an image is stable (the actual base distro\r\n  archives may indeed vary over time), though this is not used generally.\r\n  Thus the actual identification of a unique cache entry is done at least with\r\n  the tuple (ZS_DISTRIB_ID, ZS_DISTRIB_RELEASE, ZS_DISTRIB_ARCH,\r\n  ZS_BCACHE_ID). This option uses the `bcache` tool.\r\n* `ZS_BCACHE_DIR=<cache_dir>`: set location of cache when `ZS_BCACHE=true`,\r\n  defaults to `$HOME/.bcache`. Note that this location holds installed images\r\n  which may require some amout of disk space (generally 500Mb par installed\r\n  images with a reasonable number of user packegs). There is no management\r\n  of space provided by the tool, this location can be cleaned manually.\r\n  Note that the startup is much faster if this location is on the same\r\n  partition than the instelled root FSs.\r\n* `ZS_BCACHE_ID=<any_stiing>`: optional discriminent for cached images. Ref to\r\n  `ZS_BCACHE` notes.\r\n* `ZS_UPDATE=true|false`: run packages list update before installing packages,\r\n   defaults to ` true`. This should normally always be active as base distros\r\n   images do not have latest packages versions list.\r\n* `ZS_UPGRADE=false|true`: run packages upgrade before installing packages,\r\n   defaults to `false`. This has an effect only for Ubuntu images and runs\r\n   an `apt-get upgrade` if `true`. This is normally not required, provided\r\n   just as an option. Note that if this is `true`, caching through `ZS_BCACHE`\r\n   is deactivated.\r\n* `ZS_PACKAGES_STRICT/ZS_UPDATE_STRICT/ZS_UPGRADE_STRICT=true|false`: these\r\n  three variables control the error management on respectively packages\r\n  installation, packages update, packages upgrade. There are cases where\r\n  packages installation fail due to limitation of the non-privileged PRoot\r\n  backend. For instace some packages installation may try to restart damons or\r\n  create device nodes, which is not supported. If actually the installation is\r\n  correct even when such errors are reported, one may use\r\n  `ZS_PACKAGES_STRICT=false` to work-around the problem.\r\n\r\n\r\n# Build and Install\r\n\r\nThis script requires bash and wget packages and should work on any Linux\r\ndistribution for x86_64 architecture with a kernel >= 3.0.\r\n\r\nThe script can be used directly without installation.\r\n\r\nA makefile is provided for completion and testing purpose.\r\n\r\nBuild with:\r\n\r\n    $ make all # a no-op actually\r\n\r\nRun unit tests with:\r\n\r\n    $ make check\r\n\r\nInstall with, for instance:\r\n\r\n    $ make install PREFIX=$HOME/local  # Default is PREFIX=/usr/local\r\n\r\n\r\n# References\r\n\r\nRefer to the project home page at:\r\nhttp://guillon.github.com/zoostrap\r\n\r\nRefer to the current build and validation status at:\r\nhttps://travis-ci.org/guillon/zoostrap?branches\r\n\r\nFill issues and enhancement request at:\r\nhttps://github.com/guillon/zoostrap/issues\r\n\r\nRefer to the TODO file for future work:\r\nhttps://github.com/guillon/zoostrap/blob/master/TODO\r\n\r\nRefer to ckains at: https://github.com/mickael-guene/ckains\r\n\r\nRefer to PRoot at: http://proot.me\r\n\r\nRefer to bcache at: https://guillon.github.com/bcache/\r\n\r\n# License\r\n\r\nRefer to the COPYING file: https://github.com/guillon/zoostrap/blob/master/COPYING\r\nRefer to the COPYRIGHT file: https://github.com/guillon/zoostrap/blob/master/COPYRIGHT\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}